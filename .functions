function findall() {
  grep -R -i --exclude-dir=**/node_modules --exclude-dir=**/build --exclude-dir=**/dist $1 ./;
}

# Create and enter new directory
function mk() {
	mkdir -p "$@" && cd "$@";
}

# `v` with no arguments opens the current directory in Vim,
# otherwise opens the given location
function v() {
	if [ $# -eq 0 ]; then
		nvim .;
	else
		nvim "$@";
	fi;
}

function vimplugin() {
  sed -i "13iPlug '$1'" ~/.vimrc;
  viminstall;
}

function creategithubrepo() {
  curl -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/json" -d "{\"name\": \"$1\"}" https://api.github.com/user/repos
}

function project() {
  cd ~/projects;
  mkdir $1;
  cd $1;
  touch README.md;
  creategithubrepo $1;
  git init;
  git remote add origin git@github.com:LukeGeneva/$1.git;
  git add -A;
  git commit -m "Initial commit";
  git push origin -u master;
}

function updatedot() {
  dot;
  git pull;
  cd -;
  reload;
}

function clone() {
  cd ~/projects;
  git clone git@github.com:LukeGeneva/$1.git;
  cd $1;
}

function note() {
	if [ $# -eq 0 ]; then
    nvim ~/notes/notes.txt;
	else
		echo "\n$@\n" >> ~/notes/notes.txt;
	fi;
}

function todo() {
	if [ $# -eq 0 ]; then
    grep '^T \[\] .*' ~/notes/notes.txt | sort;
	else
    echo "T [] $@" >> ~/notes/notes.txt;
	fi;
}

function event() {
	if [ $# -eq 0 ]; then
    grep '^E 2[01][0-9][0-9]-[01][0-9]-[0-3][0-9]' ~/notes/notes.txt | sort;
	else
    note "E $@";
	fi;
}
